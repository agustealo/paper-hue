// Ellipsis animate on hover
@mixin animate-ellipsis($width:null, $display:null, $duration:0.5s ){
    width: $width;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    display: $display;
    &:hover{
      text-overflow: initial;
      animation-name: ellipsis;
      animation-duration: $duration;
      animation-fill-mode: both;
    }
  }

  @include keyframes($value: ellipsis) {
    0% {
      overflow: hidden;
      white-space: nowrap;
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
    100% {
      overflow: visible;
      white-space: pre-wrap;
      opacity: 1;
    }
  }

// Glare
@mixin animation-glare(
  $gradient: linear-gradient(
             60deg,rgba(255, 255, 255, 0.2),
             rgba(255, 255, 255, 0.5),
             rgba(255, 255, 255, 0.8)
             ),
  $transform: skewX(30deg),
  $psuedo: after
  ) {
  &::#{$psuedo} {
    content: '';
    position: absolute;
    top: 0;
    left: -150%;
    width: 50%;
    height: 100%;
    opacity: 0.2;
    background: $gradient;
    @include transform($transform);
  }

  &:hover::after {
    opacity: 0.7;
    @include animation(glare 0.5s);
  }
  @include keyframes($value: glare) {
    0% {
      left: 150%;
    }

    100% {
      right: 150%;
    }
  }
}

// Grayscale glare
@mixin grayscale-glare(
  $filter:grayscale(90%) contrast(150%) opacity(60%) brightness(70%),
  $filter-hover:grayscale(0) contrast(1) opacity(90%) brightness(90%),
  $value: null
  ) {
  overflow: hidden;
  @include filter($filter);
  @include animation-glare();

  &:hover {
    @include filter($filter-hover);
  }
}

// Greyscale
@mixin filter($filter:grayscale(100%), $value:null) {
  -webkit-filter: $filter;
  -webkit-transition: $value;
  -moz-filter: $filter;
  -moz-transition: $value;
  -o-filter: $filter;
  -o-transition: $value;
  -ms-filter: $filter;
  -ms-transition: $value;
  filter: $filter;
  transition: $value;
}

// Circle
@mixin circle() {
  :before {
  -webkit-animation: circle-1 10s ease infinite;
  animation: circle-1 10s ease infinite;
  border: 1px solid white;
  border-radius: 50%;
  content: "";
  height: 100%;
  position: absolute;
  right: -90%;
  top: 5%;
  width: 100%;
}
:after {
  -webkit-animation: circle-2 10s ease infinite;
  animation: circle-2 10s ease infinite;
  border: 1px solid rgba(255, 255, 255, 0.5);
  border-radius: 50%;
  content: "";
  height: 120%;
  position: absolute;
  right: -86%;
  top: 10%;
  width: 100%;
  z-index: 1;
}
}

@keyframes circle-1 {
  0% {
    -webkit-transform: translate(0) scaleY(1.2);
    transform: translate(0) scaleY(1.2);
  }
  40% {
    -webkit-transform: translate(-40px) scaleY(1.3);
    transform: translate(-40px) scaleY(1.3);
  }
  80% {
    -webkit-transform: translateX(20px) scaleY(1.3);
    transform: translateX(20px) scaleY(1.3);
  }
  100% {
    -webkit-transform: translateX(0) scaleY(1.2);
    transform: translateX(0) scaleY(1.2);
  }
}

@keyframes circle-2 {
  0% {
    -webkit-transform: translate(0);
    transform: translate(0);
  }
  33% {
    -webkit-transform: translate(20px);
    transform: translate(20px);
  }
  66% {
    -webkit-transform: translate(-20px);
    transform: translate(-20px);
  }
  100% {
    -webkit-transform: translateX(-1px);
    transform: translateX(-1px);
  }
}

// Gradient animation
@mixin gradient {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  opacity: 0.5;
	background: linear-gradient(-45deg, $color__primary, $color__complementry, $color__accent-two, $color__primary);
	background-size: 400% 400%;
	animation: gradient 7s ease infinite;
}

@keyframes gradient {
	0% {
		background-position: 0% 50%;
	}
	50% {
		background-position: 100% 50%;
	}
	100% {
		background-position: 0% 50%;
	}
}

// Fading animation
@mixin fade(
  $start-val: 0,
  $end-val: 1,
) {
  @include keyframes($value: fade) {
    0% {
      opacity: $start-val;
    }

    100% {
      opacity: $end-val;
    }
  }
}

// Scale Elements
@mixin scale-element(
  $pseudo: before,    // The pseudo element to select
  $pos: absolute,     // Set element postion
  $x_pos:left,        // X position to scale from
  $x_val: 0,          // Starting point of X scale
  $y_pos:bottom,      // Y position to scale from
  $y_val: 0,          // Starting point of Y scale
  $scale:X,           // The X or Y line to scale
  $scale_val: 0,      // Starting size before animation
  $scale_hov_val: 1,  // End size after animation
  $width:100%,        // Set width value
  $height: 2px,       // Set height value
  $background: #333,  // Set background
  $transition: transform 0.5s ease, // Transition effect
  ){
  &:$pseudo {
  content: '';
  position: $pos;
  left: $x_val;
  bottom: $y_val;
  width: $width;
  height: $height;
  background: $color__link;
  transform: scale#{$scale}($scale_val);
  transition: $scale_val;
  }

  &:hover:$pseudo {
    transform: scale$scale(1);
  }
}

// Text inset effect
@mixin hue-inset($background-color: rgba(0,0,0, 0.7), $text-shadow: 2px 2px 3px rgba(255,255,255,0.5) ){
background-color: $background-color;
color: transparent;
text-shadow: $text-shadow;
-webkit-background-clip: text;
   -moz-background-clip: text;
        background-clip: text;
}
